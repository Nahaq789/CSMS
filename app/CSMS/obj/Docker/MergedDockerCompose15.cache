name: dockercompose16572088298105127278
services:
  csms:
    build:
      context: D:\CSMS\CSMS\app\CSMS\CSMS
      dockerfile: Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: CSMS
      target: build
    container_name: dotnet6
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    labels:
      com.microsoft.visual-studio.project-name: CSMS
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages  "/app/CSMS.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 8080
      published: "8081"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: C:\Users\owner\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\r.yamada\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\r.yamada\AppData\Roaming/ASP.NET/Https
      target: /home/app/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\r.yamada\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\r.yamada\AppData\Roaming/Microsoft/UserSecrets
      target: /home/app/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net6.0
      target: /TokenService.Proxy
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net6.0
      target: /HotReloadProxy
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
      target: /HotReloadAgent
      read_only: true
      bind:
        create_host_path: true
  nginx:
    container_name: nginx
    image: nginx:latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "80"
      protocol: tcp
    restart: always
    volumes:
    - type: bind
      source: E:\ymd\vs\CSMS\CSMS\app\CSMS\nginx
      target: /etc/nginx/conf.d
      bind:
        create_host_path: true
  nodejs:
    command:
    - npm
    - start
    container_name: node.js
    environment:
      NODE_ENV: production
    image: node:18.17.1
    networks:
      default: null
    ports:
    - mode: ingress
      target: 3000
      published: "3000"
      protocol: tcp
    volumes:
    - type: bind
      source: D:/CSMS/CSMS/app
      target: /usr/src/app
      bind:
        create_host_path: true
    working_dir: /usr/src/app
  pgadmin:
    environment:
      PGADMIN_DEFAULT_EMAIL: naha022677@icloud.com
      PGADMIN_DEFAULT_PASSWORD: postgres
      TZ: Asia/Tokyo
    image: dpage/pgadmin4
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "8888"
      protocol: tcp
    restart: always
  postgresql:
    container_name: postgres
    environment:
      POSTGRES_DB: CustomerMS
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    image: postgres
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5432
      published: "5432"
      protocol: tcp
    volumes:
    - type: bind
      source: E:\ymd\vs\CSMS\CSMS\app\CSMS\docker\pg
      target: /var/lib/postgresql
      bind:
        create_host_path: true
networks:
  default:
    name: dockercompose16572088298105127278_default