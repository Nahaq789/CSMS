version: '3.4'
services:
  # csms:
  #   container_name: dotnet6
  #   image: ${DOCKER_REGISTRY-}csms
  #   build:
  #     context: .
  #     dockerfile: CSMS/Dockerfile
  #   ports:
  #       - 8081:8080
  #   environment:
  #       - ASPNETCORE_ENVIRONMENT=Development
  csms:
      container_name: dotnet6
      build:
        context: D:\CSMS\CSMS\app\CSMS\CSMS  
        dockerfile: Dockerfile  
        target: build
      ports:
        - 8081:8080
      environment:
        - ASPNETCORE_ENVIRONMENT=Development
  
  # postgresql:
  #   container_name: postgres
  #   image: postgres
  #   volumes:
  #       # - ./docker/pg:/var/lib/postgresql/data
  #       - db-main:/var/lib/postgresql/data
  #   environment:
  #       POSTGRES_USER: postgres
  #       POSTGRES_PASSWORD: postgres
  #       POSTGRES_DB: CustomerMS
  #       PGDATA: /var/lib/postgresql/data/pgdata
  #   ports:
  #     - '5432:5432'

  # testdb:
  #   container_name: testdb
  #   image: postgres
  #   volumes: 
  #       # - ./docker/pg:/var/lib/postgresql/data
  #       - db-data:/var/lib/postgresql/data
  #   environment:
  #       POSTGRES_USER: postgres
  #       POSTGRES_PASSWORD: postgres
  #       POSTGRES_DB: TestCustomerMS
  #       PGDATA: /var/lib/postgresql/data/pgdata2
  #   ports:
  #     - '5431:5431'

  nginx:
    image: nginx:latest 
    container_name: nginx
    ports:
      - "80:80" 
    volumes:
      - ./nginx:/etc/nginx/conf.d 
    restart: always 

  nodejs:
    image: node:18.17.1 
    container_name: node.js 
    working_dir: /usr/src/app 
    volumes:
      - D:/CSMS/CSMS/app:/usr/src/app 
    ports:
      - "3000:3000" 
    environment:
      - NODE_ENV=production 
    command: ["npm", "start"]  

  # pgadmin:
  #   image: dpage/pgadmin4
  #   restart: always
  #   ports:
  #     - "8888:80"
  #   environment:
  #     TZ: Asia/Tokyo
  #     PGADMIN_DEFAULT_EMAIL: 'naha022677@icloud.com'
  #     PGADMIN_DEFAULT_PASSWORD: 'postgres'

# volumes:
#   db-data:
#     driver: local
#   db-main:
#     driver: local